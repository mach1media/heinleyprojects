/**
 * HOME HERO
 */
@include component('hero') {
	$hero-height-desktop: 650px;
	$hero-height-mobile:  360px;
	$pager-size: 30px;
	
	position: relative;
	display: block;
	overflow: hidden;
	
	@include respond-above(md) {
		padding-top: 200px;
	}
	@include respond-below(md) {
		padding-top: 160px;
	}
	
/*
	&,
	.container,
	.row {
		@include z-1;
		@include respond-above(md) {
			height: $hero-height-desktop;
		}
		@include respond-below(md) {
			height: $hero-height-mobile;
		}
		@media (max-height: 850px) {
			height: 80vh;
		}
	}
*/
	
	& > video {
		position: absolute;
		top: 50%;
		left: 50%;
		min-width: 100%;
		min-height: 100%;
		width: auto;
		height: auto;
		transform: translateX(-50%) translateY(-50%);
		transition: 1s opacity;
	}
	
	@include element('codepen') {
		position: absolute;
		top: 50%;
		left: 50%;
		min-width: 100%;
		min-height: 100%;
		width: auto;
		height: auto;
		transform: translateX(-50%) translateY(-50%);
		transition: 1s opacity;
	}
	
	@include element('description') {
		position: relative;
		@include base-font;
		color: white;
		//text-shadow: 0px 0px 6px rgba(black, .75);
		
		[class*='col-'] {
			@extend %first-last-child;
			margin-bottom: 3rem;
		}
		
		@include respond-above(md) {
			p {
				font-size: 150%;
				margin-bottom: .5em;
				line-height: 1.5em;
			}
		}
		@include respond-below(md) {
			p {
				font-size: 120%;
				margin-bottom: .5em;
				line-height: 1.5em;
			}
		}
	}
	
	@include element('heading') {
		color: white;
		line-height: 1em;
		//letter-spacing: -.025em;
		margin: 0;
		padding: 0;
		
		@include respond-above(md) {
			font-size: 70px;
			//text-shadow: 0px 0px 10px rgba(black, .5);
			//max-width: 80%;
			
			& + p {
				margin-top: .5em;
			}
		}
		@include respond-below(md) {
			font-size: 36px;
			//text-shadow: 0px 0px 6px rgba(black, .5);
		}
	}
	
	@include element('carousel') {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		
		@include respond-above(md) {
			height: $hero-height-desktop;
		}
		@include respond-below(md) {
			height: $hero-height-mobile;
		}
		@media (max-height: 850px) {
			height: 90vh;
		}
		
		.slick-arrow {
			@include z-2;
		}
		.slick-prev,
		.slick-next {
			width: $pager-size;
			height: $pager-size;
			padding: 0;
		}
		.slick-prev {
			border-top: 2px solid white;
			border-left: 2px solid white;
			transform: rotate(-45deg);
			
			&:before {
				display: none;
			}
			
			//@include respond-above(lg) {
			@media (min-width: 1100px) {
				left: 5%;
			}
			//@include respond-below(lg) {
			@media (max-width: 1100px) {
				left: 100%;
				margin-left: -($pager-size + $gutter + $gutter);
				top: 100%;
				margin-top: -($pager-size + $gutter);
			}
		}
		.slick-next {
			border-top: 2px solid white;
			border-right: 2px solid white;
			transform: rotate(45deg);
			
			&:before {
				display: none;
			}
			
			//@include respond-above(lg) {
			@media (min-width: 1100px) {
				right: 5%;
			}
			//@include respond-below(lg) {
			@media (max-width: 1100px) {
				right: $gutter;
				top: 100%;
				margin-top: -($pager-size + $gutter);
			}
		}
	}
	
	@include element('carousel-slide') {
		@include respond-above(md) {
			height: $hero-height-desktop;
		}
		@include respond-below(md) {
			height: $hero-height-mobile;
		}
		@media (max-height: 850px) {
			height: 90vh;
		}
	}
	
	
	// BACKGROUND COLORS --------------------
	@include modifier('silver') {
		background-color: $color-silver;
	}
	@include modifier('white') {
		background-color: $color-white;
	}
	@include modifier('gray') {
		background-color: $color-gray;
	}
	@include modifier('gray-light') {
		background-color: $color-gray-light;
	}
	@include modifier('gray-dark') {
		background-color: $color-gray-dark;
	}
	@include modifier('black') {
		background-color: $color-black;
	}
	@include modifier('primary') {
		background-color: theme-color('primary');
	}
	@include modifier('secondary') {
		background-color: theme-color('secondary');
	}
	@include modifier('green') {
		background-color: $color-green;
	}
	@include modifier('green-light') {
		background-color: $color-green-light;
	}
	@include modifier('peach') {
		background-color: $color-peach;
	}
	@include modifier('pink') {
		background-color: $color-pink;
	}
}